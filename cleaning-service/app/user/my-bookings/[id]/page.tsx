"use client"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Separator } from "@/components/ui/separator"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import {
  Calendar,
  Clock,
  MapPin,
  Phone,
  User,
  CreditCard,
  Star,
  MessageSquare,
  ArrowLeft,
  CheckCircle,
  PlayCircle,
  XCircle,
} from "lucide-react"
import Link from "next/link"
import { useParams } from "next/navigation"

// Mock data - trong th·ª±c t·∫ø s·∫Ω fetch t·ª´ API d·ª±a tr√™n ID
const mockBookingDetail = {
  id: 1,
  serviceName: "D·ªçn Nh√† ƒê·ªãnh K·ª≥",
  serviceIcon: "üè†",
  serviceDescription: "D·ªãch v·ª• d·ªçn d·∫πp nh√† c·ª≠a h√†ng tu·∫ßn, h√†ng th√°ng v·ªõi ƒë·ªôi ng≈© chuy√™n nghi·ªáp",
  bookingDate: "2024-01-20",
  timeRange: "08:00 - 10:00",
  fullAddress: "123 Nguy·ªÖn VƒÉn Linh, Ph∆∞·ªùng T√¢n Ph√∫, Qu·∫≠n 7, TP.HCM",
  ward: "Ph∆∞·ªùng T√¢n Ph√∫",
  district: "Qu·∫≠n 7",
  city: "TP.HCM",
  addressNote: "T·∫ßng 3, cƒÉn h·ªô A301",
  contactName: "Nguy·ªÖn VƒÉn A",
  contactPhone: "0123456789",
  notes: "C·∫ßn d·ªçn d·∫πp k·ªπ ph√≤ng kh√°ch v√† b·∫øp",
  areaSize: "Trung b√¨nh (50-100m¬≤)",
  totalPrice: 450000,
  status: "completed",
  cleanerName: "Tr·∫ßn Th·ªã B",
  cleanerPhone: "0987654321",
  cleanerEmail: "cleaner@demo.com",
  cleanerAvatar: "/placeholder.svg?height=40&width=40",
  startedAt: "2024-01-20T08:00:00",
  completedAt: "2024-01-20T11:30:00",
  createdAt: "2024-01-15T10:30:00",
  paymentMethod: "cash",
  paymentStatus: "completed",
  hasReview: true,
  review: {
    overallRating: 5,
    qualityRating: 5,
    timelinessRating: 5,
    professionalismRating: 4,
    comment: "D·ªãch v·ª• r·∫•t t·ªët, nh√¢n vi√™n l√†m vi·ªác c·∫©n th·∫≠n v√† chuy√™n nghi·ªáp. Nh√† t√¥i s·∫°ch s·∫Ω nh∆∞ m·ªõi!",
    whatWentWell: "Nh√¢n vi√™n ƒë·∫øn ƒë√∫ng gi·ªù, l√†m vi·ªác r·∫•t c·∫©n th·∫≠n, ƒë·∫∑c bi·ªát l√† khu v·ª±c b·∫øp ƒë∆∞·ª£c l√†m s·∫°ch r·∫•t k·ªπ",
    whatCouldImprove: "C√≥ th·ªÉ c·∫£i thi·ªán th√™m v·ªÅ vi·ªác s·∫Øp x·∫øp ƒë·ªì ƒë·∫°c sau khi d·ªçn d·∫πp",
    wouldRecommend: true,
    createdAt: "2024-01-20T12:00:00",
  },
}

const getStatusColor = (status: string) => {
  switch (status) {
    case "completed":
      return "bg-green-100 text-green-700 border-green-200"
    case "in_progress":
      return "bg-blue-100 text-blue-700 border-blue-200"
    case "confirmed":
      return "bg-orange-100 text-orange-700 border-orange-200"
    case "pending":
      return "bg-yellow-100 text-yellow-700 border-yellow-200"
    case "cancelled":
      return "bg-red-100 text-red-700 border-red-200"
    default:
      return "bg-gray-100 text-gray-700 border-gray-200"
  }
}

const getStatusText = (status: string) => {
  switch (status) {
    case "completed":
      return "Ho√†n th√†nh"
    case "in_progress":
      return "ƒêang th·ª±c hi·ªán"
    case "confirmed":
      return "ƒê√£ x√°c nh·∫≠n"
    case "pending":
      return "Ch·ªù x√°c nh·∫≠n"
    case "cancelled":
      return "ƒê√£ h·ªßy"
    default:
      return status
  }
}

const getStatusIcon = (status: string) => {
  switch (status) {
    case "completed":
      return <CheckCircle className="h-5 w-5 text-green-600" />
    case "in_progress":
      return <PlayCircle className="h-5 w-5 text-blue-600" />
    case "confirmed":
      return <Clock className="h-5 w-5 text-orange-600" />
    case "pending":
      return <Clock className="h-5 w-5 text-yellow-600" />
    case "cancelled":
      return <XCircle className="h-5 w-5 text-red-600" />
    default:
      return <Clock className="h-5 w-5 text-gray-600" />
  }
}

export default function BookingDetailPage() {
  const params = useParams()
  const booking = mockBookingDetail // Trong th·ª±c t·∫ø s·∫Ω fetch d·ª±a tr√™n params.id

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="mb-6">
          <Button variant="ghost" asChild className="mb-4">
            <Link href="/user/dashboard">
              <ArrowLeft className="h-4 w-4 mr-2" />
              Quay l·∫°i danh s√°ch
            </Link>
          </Button>

          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-3xl font-bold text-gray-900 mb-2">Chi ti·∫øt booking #{booking.id}</h1>
              <div className="flex items-center gap-3">
                {getStatusIcon(booking.status)}
                <Badge className={getStatusColor(booking.status)}>{getStatusText(booking.status)}</Badge>
              </div>
            </div>

            {booking.status === "completed" && !booking.hasReview && (
              <Button asChild>
                <Link href={`/feedback/${booking.id}`}>
                  <MessageSquare className="h-4 w-4 mr-2" />
                  ƒê√°nh gi√° d·ªãch v·ª•
                </Link>
              </Button>
            )}
          </div>
        </div>

        <div className="grid lg:grid-cols-3 gap-6">
          {/* Main Content */}
          <div className="lg:col-span-2 space-y-6">
            {/* Service Info */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-3">
                  <span className="text-2xl">{booking.serviceIcon}</span>
                  {booking.serviceName}
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-600 mb-4">{booking.serviceDescription}</p>
                <div className="grid md:grid-cols-2 gap-4">
                  <div>
                    <h4 className="font-semibold mb-2">Th√¥ng tin ƒë·∫∑t l·ªãch</h4>
                    <div className="space-y-2 text-sm">
                      <div className="flex items-center gap-2">
                        <Calendar className="h-4 w-4 text-blue-600" />
                        <span>{new Date(booking.bookingDate).toLocaleDateString("vi-VN")}</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <Clock className="h-4 w-4 text-green-600" />
                        <span>{booking.timeRange}</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <span className="text-gray-600">Di·ªán t√≠ch:</span>
                        <span>{booking.areaSize}</span>
                      </div>
                    </div>
                  </div>

                  <div>
                    <h4 className="font-semibold mb-2">Th·ªùi gian th·ª±c hi·ªán</h4>
                    <div className="space-y-2 text-sm">
                      {booking.startedAt && (
                        <div>
                          <span className="text-gray-600">B·∫Øt ƒë·∫ßu: </span>
                          <span>{new Date(booking.startedAt).toLocaleString("vi-VN")}</span>
                        </div>
                      )}
                      {booking.completedAt && (
                        <div>
                          <span className="text-gray-600">Ho√†n th√†nh: </span>
                          <span>{new Date(booking.completedAt).toLocaleString("vi-VN")}</span>
                        </div>
                      )}
                      {booking.startedAt && booking.completedAt && (
                        <div>
                          <span className="text-gray-600">Th·ªùi gian l√†m vi·ªác: </span>
                          <span className="font-medium">
                            {Math.round(
                              (new Date(booking.completedAt).getTime() - new Date(booking.startedAt).getTime()) /
                              (1000 * 60 * 60 * 100),
                            ) / 10}{" "}
                            gi·ªù
                          </span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Address Info */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <MapPin className="h-5 w-5 text-red-600" />
                  ƒê·ªãa ch·ªâ th·ª±c hi·ªán
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div>
                    <h4 className="font-semibold mb-1">ƒê·ªãa ch·ªâ ƒë·∫ßy ƒë·ªß</h4>
                    <p className="text-gray-700">{booking.fullAddress}</p>
                  </div>

                  <div className="grid md:grid-cols-3 gap-4 text-sm">
                    <div>
                      <span className="text-gray-600">Ph∆∞·ªùng/X√£: </span>
                      <span>{booking.ward}</span>
                    </div>
                    <div>
                      <span className="text-gray-600">Qu·∫≠n/Huy·ªán: </span>
                      <span>{booking.district}</span>
                    </div>
                    <div>
                      <span className="text-gray-600">Th√†nh ph·ªë: </span>
                      <span>{booking.city}</span>
                    </div>
                  </div>

                  {booking.addressNote && (
                    <div>
                      <h4 className="font-semibold mb-1">Ghi ch√∫ ƒë·ªãa ch·ªâ</h4>
                      <p className="text-gray-700">{booking.addressNote}</p>
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>

            {/* Contact Info */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <User className="h-5 w-5 text-blue-600" />
                  Th√¥ng tin li√™n h·ªá
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid md:grid-cols-2 gap-4">
                  <div>
                    <h4 className="font-semibold mb-2">Ng∆∞·ªùi li√™n h·ªá</h4>
                    <div className="space-y-2 text-sm">
                      <div>
                        <span className="text-gray-600">T√™n: </span>
                        <span>{booking.contactName}</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <Phone className="h-4 w-4 text-green-600" />
                        <span>{booking.contactPhone}</span>
                      </div>
                    </div>
                  </div>

                  {booking.notes && (
                    <div>
                      <h4 className="font-semibold mb-2">Ghi ch√∫</h4>
                      <p className="text-sm text-gray-700">{booking.notes}</p>
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>

            {/* Review Section */}
            {booking.hasReview && booking.review && (
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Star className="h-5 w-5 text-yellow-500" />
                    ƒê√°nh gi√° c·ªßa b·∫°n
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {/* Overall Rating */}
                    <div className="flex items-center gap-4">
                      <div className="text-center">
                        <div className="text-3xl font-bold text-blue-600">{booking.review.overallRating}</div>
                        <div className="flex items-center justify-center">
                          {[...Array(5)].map((_, i) => (
                            <Star
                              key={i}
                              className={`h-4 w-4 ${i < booking.review.overallRating ? "text-yellow-500 fill-current" : "text-gray-300"}`}
                            />
                          ))}
                        </div>
                        <div className="text-xs text-gray-600">T·ªïng th·ªÉ</div>
                      </div>

                      <div className="flex-1 space-y-2">
                        <div className="flex items-center justify-between text-sm">
                          <span>Ch·∫•t l∆∞·ª£ng</span>
                          <div className="flex items-center">
                            {[...Array(5)].map((_, i) => (
                              <Star
                                key={i}
                                className={`h-3 w-3 ${i < booking.review.qualityRating ? "text-yellow-500 fill-current" : "text-gray-300"}`}
                              />
                            ))}
                          </div>
                        </div>
                        <div className="flex items-center justify-between text-sm">
                          <span>ƒê√∫ng gi·ªù</span>
                          <div className="flex items-center">
                            {[...Array(5)].map((_, i) => (
                              <Star
                                key={i}
                                className={`h-3 w-3 ${i < booking.review.timelinessRating ? "text-yellow-500 fill-current" : "text-gray-300"}`}
                              />
                            ))}
                          </div>
                        </div>
                        <div className="flex items-center justify-between text-sm">
                          <span>Chuy√™n nghi·ªáp</span>
                          <div className="flex items-center">
                            {[...Array(5)].map((_, i) => (
                              <Star
                                key={i}
                                className={`h-3 w-3 ${i < booking.review.professionalismRating ? "text-yellow-500 fill-current" : "text-gray-300"}`}
                              />
                            ))}
                          </div>
                        </div>
                      </div>
                    </div>

                    <Separator />

                    {/* Comments */}
                    <div className="space-y-3">
                      <div>
                        <h4 className="font-semibold mb-2">Nh·∫≠n x√©t chung</h4>
                        <p className="text-gray-700">{booking.review.comment}</p>
                      </div>

                      <div>
                        <h4 className="font-semibold mb-2 text-green-700">ƒêi·ªÅu g√¨ t·ªët</h4>
                        <p className="text-gray-700">{booking.review.whatWentWell}</p>
                      </div>

                      <div>
                        <h4 className="font-semibold mb-2 text-orange-700">ƒêi·ªÅu g√¨ c·∫ßn c·∫£i thi·ªán</h4>
                        <p className="text-gray-700">{booking.review.whatCouldImprove}</p>
                      </div>

                      {booking.review.wouldRecommend && (
                        <div className="flex items-center gap-2 p-3 bg-green-50 rounded-lg">
                          <CheckCircle className="h-4 w-4 text-green-600" />
                          <span className="text-sm text-green-700">B·∫°n s·∫Ω gi·ªõi thi·ªáu d·ªãch v·ª• n√†y cho ng∆∞·ªùi kh√°c</span>
                        </div>
                      )}
                    </div>

                    <div className="text-xs text-gray-500">
                      ƒê√°nh gi√° v√†o {new Date(booking.review.createdAt).toLocaleString("vi-VN")}
                    </div>
                  </div>
                </CardContent>
              </Card>
            )}
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Cleaner Info */}
            <Card>
              <CardHeader>
                <CardTitle>Nh√¢n vi√™n th·ª±c hi·ªán</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="flex items-center gap-3 mb-4">
                  <Avatar>
                    <AvatarImage src={booking.cleanerAvatar || "/placeholder.svg"} />
                    <AvatarFallback>{booking.cleanerName.charAt(0)}</AvatarFallback>
                  </Avatar>
                  <div>
                    <h4 className="font-semibold">{booking.cleanerName}</h4>
                    <p className="text-sm text-gray-600">Nh√¢n vi√™n d·ªçn d·∫πp</p>
                  </div>
                </div>

                <div className="space-y-2 text-sm">
                  <div className="flex items-center gap-2">
                    <Phone className="h-4 w-4 text-green-600" />
                    <span>{booking.cleanerPhone}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <span className="text-gray-600">Email:</span>
                    <span>{booking.cleanerEmail}</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Payment Info */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <CreditCard className="h-5 w-5 text-green-600" />
                  Thanh to√°n
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="flex justify-between">
                    <span className="text-gray-600">T·ªïng ti·ªÅn:</span>
                    <span className="text-2xl font-bold text-blue-600">
                      {booking.totalPrice.toLocaleString("vi-VN")} VNƒê
                    </span>
                  </div>

                  <Separator />

                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-gray-600">Ph∆∞∆°ng th·ª©c:</span>
                      <span>{booking.paymentMethod === "cash" ? "Ti·ªÅn m·∫∑t" : "Chuy·ªÉn kho·∫£n"}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">Tr·∫°ng th√°i:</span>
                      <Badge variant={booking.paymentStatus === "completed" ? "default" : "secondary"}>
                        {booking.paymentStatus === "completed" ? "ƒê√£ thanh to√°n" : "Ch∆∞a thanh to√°n"}
                      </Badge>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Booking Timeline */}
            <Card>
              <CardHeader>
                <CardTitle>L·ªãch s·ª≠ booking</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3 text-sm">
                  <div className="flex items-center gap-3">
                    <div className="w-2 h-2 bg-blue-600 rounded-full"></div>
                    <div>
                      <div className="font-medium">ƒê·∫∑t l·ªãch</div>
                      <div className="text-gray-600">{new Date(booking.createdAt).toLocaleString("vi-VN")}</div>
                    </div>
                  </div>

                  {booking.startedAt && (
                    <div className="flex items-center gap-3">
                      <div className="w-2 h-2 bg-green-600 rounded-full"></div>
                      <div>
                        <div className="font-medium">B·∫Øt ƒë·∫ßu l√†m vi·ªác</div>
                        <div className="text-gray-600">{new Date(booking.startedAt).toLocaleString("vi-VN")}</div>
                      </div>
                    </div>
                  )}

                  {booking.completedAt && (
                    <div className="flex items-center gap-3">
                      <div className="w-2 h-2 bg-purple-600 rounded-full"></div>
                      <div>
                        <div className="font-medium">Ho√†n th√†nh</div>
                        <div className="text-gray-600">{new Date(booking.completedAt).toLocaleString("vi-VN")}</div>
                      </div>
                    </div>
                  )}

                  {booking.hasReview && booking.review && (
                    <div className="flex items-center gap-3">
                      <div className="w-2 h-2 bg-yellow-600 rounded-full"></div>
                      <div>
                        <div className="font-medium">ƒê√°nh gi√°</div>
                        <div className="text-gray-600">
                          {new Date(booking.review.createdAt).toLocaleString("vi-VN")}
                        </div>
                      </div>
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  )
}
