"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Separator } from "@/components/ui/separator"
import {
  Heart,
  Calendar,
  Clock,
  User,
  Eye,
  ArrowLeft,
  Share2,
  BookmarkPlus,
  ThumbsUp,
  MessageCircle,
} from "lucide-react"
import Link from "next/link"
import { format } from "date-fns"
import { vi } from "date-fns/locale"
import { useParams } from "next/navigation"
import Header from "@/components/header"
import Footer from "@/components/footer"

export default function NewsDetailPage() {
  const params = useParams()
  const [article, setArticle] = useState<any>(null)
  const [relatedArticles, setRelatedArticles] = useState<any[]>([])

  // Mock data - trong th·ª±c t·∫ø s·∫Ω fetch t·ª´ API
  const newsArticles = [
    {
      id: 1,
      title: "10 M·∫πo D·ªçn Nh√† Nhanh Ch√≥ng V√† Hi·ªáu Qu·∫£",
      excerpt: "Kh√°m ph√° nh·ªØng b√≠ quy·∫øt gi√∫p b·∫°n d·ªçn d·∫πp nh√† c·ª≠a m·ªôt c√°ch nhanh ch√≥ng v√† ti·∫øt ki·ªám th·ªùi gian...",
      content: `
        <h2>D·ªçn d·∫πp nh√† c·ª≠a kh√¥ng c·∫ßn ph·∫£i m·∫•t c·∫£ ng√†y</h2>
        <p>V·ªõi nh·ªØng m·∫πo hay n√†y, b·∫°n c√≥ th·ªÉ c√≥ m·ªôt ng√¥i nh√† s·∫°ch s·∫Ω ch·ªâ trong v√†i gi·ªù. H√£y c√πng CareU kh√°m ph√° nh·ªØng b√≠ quy·∫øt ƒë∆°n gi·∫£n nh∆∞ng hi·ªáu qu·∫£.</p>
        
        <h3>1. Chu·∫©n b·ªã ƒë·∫ßy ƒë·ªß d·ª•ng c·ª•</h3>
        <p>Tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu, h√£y chu·∫©n b·ªã ƒë·∫ßy ƒë·ªß c√°c d·ª•ng c·ª• c·∫ßn thi·∫øt nh∆∞ khƒÉn lau, ch·∫•t t·∫©y r·ª≠a, t√∫i r√°c, v√† m√°y h√∫t b·ª•i. ƒêi·ªÅu n√†y gi√∫p b·∫°n kh√¥ng ph·∫£i ng·ª´ng gi·ªØa ch·ª´ng ƒë·ªÉ t√¨m ki·∫øm d·ª•ng c·ª•.</p>
        
        <h3>2. √Åp d·ª•ng quy t·∫Øc 15 ph√∫t</h3>
        <p>D√†nh 15 ph√∫t m·ªói ng√†y ƒë·ªÉ d·ªçn d·∫πp m·ªôt khu v·ª±c nh·ªè. ƒêi·ªÅu n√†y gi√∫p duy tr√¨ s·ª± s·∫°ch s·∫Ω v√† tr√°nh vi·ªác ph·∫£i d·ªçn d·∫πp l·ªõn v√†o cu·ªëi tu·∫ßn.</p>
        
        <h3>3. D·ªçn t·ª´ tr√™n xu·ªëng d∆∞·ªõi</h3>
        <p>Lu√¥n b·∫Øt ƒë·∫ßu d·ªçn d·∫πp t·ª´ tr·∫ßn nh√†, qu·∫°t tr·∫ßn, ƒë√®n chi·∫øu s√°ng r·ªìi m·ªõi ƒë·∫øn b√†n gh·∫ø v√† cu·ªëi c√πng l√† s√†n nh√†. ƒêi·ªÅu n√†y tr√°nh vi·ªác b·ª•i b·∫©n r∆°i xu·ªëng nh·ªØng n∆°i ƒë√£ d·ªçn s·∫°ch.</p>
        
        <h3>4. S·ª≠ d·ª•ng ph∆∞∆°ng ph√°p "m·ªôt l·∫ßn ch·∫°m"</h3>
        <p>Khi nh·∫∑t m·ªôt v·∫≠t d·ª•ng, h√£y quy·∫øt ƒë·ªãnh ngay xem s·∫Ω gi·ªØ l·∫°i, v·ª©t b·ªè hay t·∫∑ng ƒëi. Kh√¥ng ƒë·ªÉ l·∫°i ƒë·ªÉ quy·∫øt ƒë·ªãnh sau, ƒëi·ªÅu n√†y s·∫Ω ti·∫øt ki·ªám r·∫•t nhi·ªÅu th·ªùi gian.</p>
        
        <h3>5. D·ªçn d·∫πp theo t·ª´ng ph√≤ng</h3>
        <p>T·∫≠p trung ho√†n th√†nh m·ªôt ph√≤ng tr∆∞·ªõc khi chuy·ªÉn sang ph√≤ng kh√°c. ƒêi·ªÅu n√†y gi√∫p b·∫°n c√≥ c·∫£m gi√°c ho√†n th√†nh v√† ƒë·ªông l·ª±c ƒë·ªÉ ti·∫øp t·ª•c.</p>
        
        <p><strong>K·∫øt lu·∫≠n:</strong> D·ªçn d·∫πp nh√† c·ª≠a kh√¥ng nh·∫•t thi·∫øt ph·∫£i l√† c√¥ng vi·ªác n·∫∑ng nh·ªçc. V·ªõi nh·ªØng m·∫πo ƒë∆°n gi·∫£n n√†y, b·∫°n c√≥ th·ªÉ duy tr√¨ m·ªôt ng√¥i nh√† s·∫°ch s·∫Ω m√† kh√¥ng t·ªën qu√° nhi·ªÅu th·ªùi gian v√† c√¥ng s·ª©c.</p>
      `,
      category: "tips",
      author: "Nguy·ªÖn Th·ªã Lan",
      publishDate: new Date("2024-01-15"),
      readTime: "5 ph√∫t ƒë·ªçc",
      views: 1250,
      likes: 89,
      comments: 23,
      image: "/placeholder.svg?height=400&width=800",
      tags: ["d·ªçn d·∫πp", "m·∫πo v·∫∑t", "ti·∫øt ki·ªám th·ªùi gian", "nh√† c·ª≠a"],
    },
    // Th√™m c√°c b√†i vi·∫øt kh√°c...
  ]

  useEffect(() => {
    // T√¨m b√†i vi·∫øt theo ID
    const foundArticle = newsArticles.find((a) => a.id === Number.parseInt(params.id as string))
    setArticle(foundArticle)

    // T√¨m b√†i vi·∫øt li√™n quan (c√πng category, kh√°c ID)
    if (foundArticle) {
      const related = newsArticles
        .filter((a) => a.category === foundArticle.category && a.id !== foundArticle.id)
        .slice(0, 3)
      setRelatedArticles(related)
    }
  }, [params.id])

  if (!article) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-indigo-50 via-white to-cyan-50">
        <Header />
        <div className="pt-20 pb-16 px-4">
          <div className="max-w-4xl mx-auto text-center">
            <div className="text-6xl mb-4">üì∞</div>
            <h1 className="text-3xl font-bold mb-4">Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt</h1>
            <p className="text-gray-600 mb-8">B√†i vi·∫øt b·∫°n ƒëang t√¨m ki·∫øm kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã x√≥a.</p>
            <Button asChild>
              <Link href="/news">
                <ArrowLeft className="w-4 h-4 mr-2" />
                Quay l·∫°i tin t·ª©c
              </Link>
            </Button>
          </div>
        </div>
      </div>
    )
  }

  const getCategoryColor = (category: string) => {
    const colors = {
      tips: "bg-blue-100 text-blue-700",
      health: "bg-green-100 text-green-700",
      technology: "bg-purple-100 text-purple-700",
      company: "bg-orange-100 text-orange-700",
      promotion: "bg-red-100 text-red-700",
    }
    return colors[category as keyof typeof colors] || "bg-gray-100 text-gray-700"
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-50 via-white to-cyan-50">
      <Header />

      <div className="pt-20 pb-16 px-4">
        <div className="max-w-4xl mx-auto">
          {/* Back Button */}
          <div className="mb-8">
            <Button asChild variant="outline" className="border-blue-200 text-blue-700 hover:bg-blue-50">
              <Link href="/news">
                <ArrowLeft className="w-4 h-4 mr-2" />
                Quay l·∫°i tin t·ª©c
              </Link>
            </Button>
          </div>

          {/* Article Header */}
          <Card className="mb-8 border-0 shadow-xl bg-white/80 backdrop-blur-sm">
            <div className="relative">
              <img
                src={article.image || "/placeholder.svg"}
                alt={article.title}
                className="w-full h-64 md:h-80 object-cover rounded-t-lg"
              />
              <div className="absolute top-4 left-4">
                <Badge className={`${getCategoryColor(article.category)} border-0`}>
                  {article.category === "tips"
                    ? "M·∫πo v·∫∑t"
                    : article.category === "health"
                      ? "S·ª©c kh·ªèe"
                      : article.category === "technology"
                        ? "C√¥ng ngh·ªá"
                        : article.category === "company"
                          ? "Tin c√¥ng ty"
                          : "Khuy·∫øn m√£i"}
                </Badge>
              </div>
            </div>

            <CardContent className="p-8">
              <h1 className="text-3xl md:text-4xl font-bold mb-6 leading-tight">{article.title}</h1>

              <div className="flex flex-wrap items-center gap-6 text-gray-600 mb-6">
                <div className="flex items-center">
                  <User className="w-5 h-5 mr-2" />
                  <span className="font-medium">{article.author}</span>
                </div>
                <div className="flex items-center">
                  <Calendar className="w-5 h-5 mr-2" />
                  <span>{format(article.publishDate, "dd MMMM yyyy", { locale: vi })}</span>
                </div>
                <div className="flex items-center">
                  <Clock className="w-5 h-5 mr-2" />
                  <span>{article.readTime}</span>
                </div>
                <div className="flex items-center">
                  <Eye className="w-5 h-5 mr-2" />
                  <span>{article.views} l∆∞·ª£t xem</span>
                </div>
              </div>

              <div className="flex flex-wrap gap-2 mb-6">
                {article.tags.map((tag: string, index: number) => (
                  <Badge key={index} variant="outline" className="text-xs">
                    #{tag}
                  </Badge>
                ))}
              </div>

              <Separator className="mb-6" />

              {/* Social Actions */}
              <div className="flex items-center justify-between mb-8">
                <div className="flex items-center gap-4">
                  <Button variant="outline" size="sm" className="border-blue-200 text-blue-700 hover:bg-blue-50">
                    <ThumbsUp className="w-4 h-4 mr-2" />
                    {article.likes}
                  </Button>
                  <Button variant="outline" size="sm" className="border-gray-200 hover:bg-gray-50">
                    <MessageCircle className="w-4 h-4 mr-2" />
                    {article.comments}
                  </Button>
                </div>
                <div className="flex items-center gap-2">
                  <Button variant="outline" size="sm" className="border-gray-200 hover:bg-gray-50">
                    <BookmarkPlus className="w-4 h-4" />
                  </Button>
                  <Button variant="outline" size="sm" className="border-gray-200 hover:bg-gray-50">
                    <Share2 className="w-4 h-4" />
                  </Button>
                </div>
              </div>

              {/* Article Content */}
              <div
                className="prose prose-lg max-w-none prose-headings:text-gray-900 prose-p:text-gray-700 prose-p:leading-relaxed prose-strong:text-gray-900"
                dangerouslySetInnerHTML={{ __html: article.content }}
              />
            </CardContent>
          </Card>

          {/* Related Articles */}
          {relatedArticles.length > 0 && (
            <div className="mb-8">
              <h2 className="text-2xl font-bold mb-6">
                <span className="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  B√†i Vi·∫øt Li√™n Quan
                </span>
              </h2>
              <div className="grid md:grid-cols-3 gap-6">
                {relatedArticles.map((relatedArticle) => (
                  <Card key={relatedArticle.id} className="hover:shadow-lg transition-all duration-300 border-0">
                    <div className="relative">
                      <img
                        src={relatedArticle.image || "/placeholder.svg"}
                        alt={relatedArticle.title}
                        className="w-full h-32 object-cover rounded-t-lg"
                      />
                    </div>
                    <CardContent className="p-4">
                      <h3 className="font-semibold mb-2 line-clamp-2 hover:text-blue-600 transition-colors">
                        <Link href={`/news/${relatedArticle.id}`}>{relatedArticle.title}</Link>
                      </h3>
                      <p className="text-sm text-gray-600 line-clamp-2 mb-3">{relatedArticle.excerpt}</p>
                      <div className="flex items-center justify-between text-xs text-gray-500">
                        <span>{format(relatedArticle.publishDate, "dd/MM", { locale: vi })}</span>
                        <span>{relatedArticle.readTime}</span>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          )}

          {/* CTA */}
          <Card className="bg-gradient-to-r from-blue-600 to-purple-600 text-white border-0">
            <CardContent className="p-8 text-center">
              <div className="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4">
                <Heart className="w-8 h-8" />
              </div>
              <h3 className="text-2xl font-bold mb-4">C·∫ßn D·ªãch V·ª• D·ªçn V·ªá Sinh?</h3>
              <p className="text-lg mb-6 opacity-90">ƒê·ªÉ CareU chƒÉm s√≥c ng√¥i nh√† c·ªßa b·∫°n v·ªõi d·ªãch v·ª• chuy√™n nghi·ªáp</p>
              <Button asChild size="lg" className="bg-white text-blue-600 hover:bg-gray-100">
                <Link href="/booking">ƒê·∫∑t L·ªãch Ngay</Link>
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>

      <Footer />
    </div>
  )
}
